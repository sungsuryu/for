<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.knia.foreign.exchange.dao.mapper.LoginMapper">

	<resultMap id="mapUserVO" type="egovframework.knia.foreign.exchange.vo.UserVO">
		<result property="userId" column="USER_ID" />
		<result property="userNm" column="USER_NM" />
		<result property="password" column="PASSWORD" />
		<result property="insurCd" column="INSUR_CD" />
		<result property="emlAddr" column="EML_ADDR" />
		<result property="cellNum" column="CELL_NUM" />
	</resultMap>
	
	<resultMap id="mapAuthHistVO" type="egovframework.knia.foreign.exchange.vo.LoginAuthHistVO">
		<result property="authNum" column="AUTH_NUM" />
		<result property="approveTimestamp" column="APPROVE_TIMESTAMP" />
	</resultMap>

	<select id="selectUser" parameterType="loginVO" resultMap="mapUserVO">
		/** Login.selectUser */
			SELECT
				USER_ID, USER_NM, PASSWORD, 
				INSUR_CD, EML_ADDR, CELL_NUM
			FROM
				TB_FOR_USER
			WHERE
				USER_ID=#{loginId} 
				AND PASSWORD=#{password}
				AND IS_DEL='N' 
				AND USE_YN='Y' 
				AND IS_APPROVE='Y'
	</select>
	
	<select id="countUser" parameterType="loginVO" resultType="int">
		/** Login.countUser */
			SELECT
				COUNT(USER_ID) FROM TB_FOR_USER
			WHERE
				USER_ID=#{loginId} 
				AND PASSWORD=#{password}
				AND IS_DEL='N' 
				AND USE_YN='Y' 
				AND IS_APPROVE='Y'
	</select>

	<insert id="insertAuthHist" parameterType="loginAuthHistVO">
		/** Login.insertAuthHist */
			INSERT INTO TB_FOR_LOGIN_AUTH_HIST (
				USER_ID, 
				AUTH_NUM,
				IS_EXP, 
				IS_DEL, 
				INSRT_ID, 
				INSRT_DATE, 
				UPDT_ID,
				UPDT_DATE
			) VALUES (
				#{userId}, 
				#{authNum}, 
				'N', 
				'N',
				#{userId},
				now(), 
				#{userId},
				now()
			)
	</insert>
	
	<update id="updateExpireOtp" parameterType="loginVO">
		/** Login.updateExpireOtp */
		UPDATE
			TB_FOR_LOGIN_AUTH_HIST
			SET
				IS_EXP='Y'
				, UPDT_ID=#{loginId}
				, UPDT_DATE=now()
		WHERE
			USER_ID=#{loginId}
			AND IS_EXP='N'
			AND INSRT_DATE > DATE_SUB(now(), INTERVAL 60 MINUTE)
	</update>
	
	<select id="selectAuthNum" parameterType="loginAuthHistVO" resultMap="mapAuthHistVO">
		/** Login.selectAuthNum */
			SELECT
				AUTH_NUM, APPROVE_TIMESTAMP
			FROM
				TB_FOR_LOGIN_AUTH_HIST
			WHERE
				USER_ID=#{loginId}
				AND IS_EXP='N'
				AND IS_DEL='N'
				AND INSRT_DATE > DATE_SUB(now(), INTERVAL 2 MINUTE)
			ORDER BY
				INSRT_DATE DESC LIMIT 1
			
	</select>
</mapper>