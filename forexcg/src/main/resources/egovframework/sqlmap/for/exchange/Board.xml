<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="egovframework.knia.foreign.exchange.dao.mapper.BoardMapper">

	<resultMap id="mapBoardVO" type="egovframework.knia.foreign.exchange.vo.BoardVO">
		<result property="boardIdx" column="BOARD_IDX"/>
		<result property="boardTitle" column="BOARD_TITLE"/>
		<result property="boardContent" column="BOARD_CONTENT"/>
		<result property="userId" column="USER_ID"/>
		<result property="userName" column="USER_NM"/>
		<result property="insrtId" column="INSRT_ID"/>
		<result property="insrtDate" column="INSRT_DATE"/>
		<result property="updtId" column="UPDT_ID"/>
		<result property="updtDate" column="UPDT_DATE"/>
		<result property="viewCnt" column="VIEW_CNT"/>
		<result property="isDel" column="IS_DEL"/>
		<result property="alarmYn" column="ALARM_YN"/>
		<result property="alarmDate" column="ALARM_DATE"/>
		<result property="boardType" column="BOARD_TYPE"/>
		<result property="totalCnt" column="TOTAL_CNT"/>
		<result property="listNum" column="LIST_NUM"/>
		<result property="fileCnt" column="FILE_CNT"/>
		<!-- FAQ 정보 -->
		<result property="faqIdx" column="FAQ_IDX"/>
		<result property="faqFileNm" column="FAQ_FILENM"/>
		<result property="fileId" column="FILE_ID"/>
		<result property="useYn" column="USE_YN"/>
	</resultMap>
	
	<select id="selectBoardCnt" parameterType="boardVO" resultType="int">
			/** board.selectBoardCnt */
			SELECT
				COUNT(*) AS TOTAL_CNT
			FROM
				TB_FOR_BOARD
			WHERE
				BOARD_TYPE = #{boardType}
			AND IS_DEL = 'N'
			<if test='searchName != null or !searchName.equals("")'>
				AND BOARD_TITLE LIKE CONCAT('%', #{searchName}, '%')
			</if>
	</select>

	<select id="selectBoardList" parameterType="boardVO" resultMap="mapBoardVO">
			/** board.selectBoardList */
		SELECT 
			 TB.LIST_NUM
			,TB.BOARD_IDX
			,TB.BOARD_TITLE
			,TB.USER_ID
			,TB.USER_NM
			,TB.INSRT_DATE
			,TB.VIEW_CNT
			,TB.FILE_CNT
		FROM
		(SELECT
			@ROWNUM:=@ROWNUM+1 AS LIST_NUM,
			 TB.BOARD_IDX
			,TB.BOARD_TITLE
			,TB.USER_ID
			,TB.USER_NM
			,TB.INSRT_DATE
			,TB.VIEW_CNT
			,TB.FILE_CNT
		FROM
			(SELECT
				TB.*,
				COUNT(TBF.FILE_GRP_NUM) AS FILE_CNT
			FROM
				TB_FOR_BOARD TB LEFT OUTER JOIN TB_FOR_ATCH_FILES TBF ON TB.BOARD_IDX = TBF.FILE_GRP_NUM AND TBF.IS_DEL = 'N'
			WHERE 1=1
			GROUP BY TB.BOARD_IDX) TB, (SELECT @rownum:=0) temp
		WHERE
			TB.BOARD_TYPE = #{boardType}
			AND TB.IS_DEL = 'N'
		<if test='searchName != null or !searchName.equals("")'>
			AND TB.BOARD_TITLE LIKE CONCAT('%', #{searchName}, '%')
		</if>
		ORDER BY TB.BOARD_IDX DESC) TB
		LIMIT #{recordCountPerPage} OFFSET #{firstIndex}
	</select>
	
	<select id="selectBoard" parameterType="int" resultMap="mapBoardVO">
		/** board.selectBoard */
		SELECT 
			 BOARD_IDX
			,BOARD_TITLE
			,BOARD_CONTENT
			,ALARM_YN
			,USER_NM
		FROM TB_FOR_BOARD
		WHERE BOARD_IDX = #{board_idx};
	</select>
	
	<update id="updateBoardViewCnt" parameterType="boardVO">
		/** board.updateBoardViewCnt */
		UPDATE
			TB_FOR_BOARD
		SET
			VIEW_CNT = IFNULL(VIEW_CNT, 0) +1
		WHERE
			BOARD_IDX = #{boardIdx}
	</update>
	
	<insert id="insertBoard" parameterType="boardVO" useGeneratedKeys="true" keyProperty="boardIdx">
		/** board.insertBoard */
		INSERT INTO TB_FOR_BOARD
		(
				BOARD_TITLE,
				BOARD_CONTENT,
				USER_ID,
				USER_NM,
				INSRT_ID,
				INSRT_DATE,
				UPDT_ID,
				UPDT_DATE,
				VIEW_CNT,
				IS_DEL,
				ALARM_YN,
				<if test='!alarmYn.equals("N")'>
					ALARM_DATE,
				</if>
				BOARD_TYPE
				
		)
		VALUE(
			#{boardTitle},
			#{boardContent},
			#{userId},
			#{userName},
			#{userId},
			NOW(),
			#{userId},
			NOW(),
			0,
			#{isDel},
			#{alarmYn},
			<if test='!alarmYn.equals("N")'>
				NOW(),
			</if>
			#{boardType}
		)
	</insert>
	
	<update id="updateBoard" parameterType="boardVO">
		/** board.updateBoard */
		UPDATE
			TB_FOR_BOARD
		SET
			 BOARD_TITLE = #{boardTitle}
			,BOARD_CONTENT = #{boardContent}
			,USER_NM = #{userName}
			,UPDT_ID = #{updtId}
			,UPDT_DATE = NOW()
			,ALARM_YN = #{alarmYn}
		WHERE
			BOARD_IDX = #{boardIdx}
	</update>
	
	<update id="deleteBoard" parameterType="int">
		/** board.deleteBoard */
		UPDATE
			TB_FOR_BOARD
		SET
			IS_DEL = 'Y'
		WHERE
			BOARD_IDX = #{boardIdx}
	</update>
	
	<select id="selectFaqCnt" parameterType="boardVO" resultType="int">
		/** board.selectFaqCnt */
		SELECT
			COUNT(*) AS TOTAL_CNT
		FROM
			TB_FOR_FAQ
		WHERE
			BOARD_TYPE = #{boardType}
	</select>
	
	<select id="selectFaqList" parameterType="boardVO" resultMap="mapBoardVO">
		/** board.selectFaqList */
		SELECT 
			 TB.LIST_NUM
			,TB.FAQ_IDX
			,TB.FAQ_FILENM
			,TB.USER_NM
			,TB.INSRT_DATE
			,TB.USE_YN
			,TB.FILE_ID
		FROM
		(SELECT
			@ROWNUM:=@ROWNUM+1 AS LIST_NUM
			,TB.FAQ_IDX
			,TB.FAQ_FILENM
			,TB.USER_NM
			,TB.INSRT_DATE
			,TB.USE_YN
			,TB.FILE_ID
		FROM
			(SELECT
				TB.*,
				TBF.FILE_ID
			FROM
				TB_FOR_FAQ TB LEFT OUTER JOIN TB_FOR_ATCH_FILES TBF ON TB.FAQ_IDX = TBF.FILE_GRP_NUM AND TBF.FILE_GRP_CD = #{boardType}
			WHERE 1=1
			GROUP BY TB.FAQ_IDX) TB, (SELECT @rownum:=0) temp
		WHERE
			TB.BOARD_TYPE = #{boardType}
		ORDER BY TB.FAQ_IDX DESC) TB
	</select>
	
	<update id="updateFaqUseYn" parameterType="boardVO">
		/** board.updateFaqUseYn */
		UPDATE
			TB_FOR_FAQ
		SET
			USE_YN = #{useYn}
		WHERE
			FAQ_IDX = #{faqIdx}
	</update>
	
	<insert id="insertFaq" parameterType="boardVO" useGeneratedKeys="true" keyProperty="faqIdx">
		/** board.insertFaq */
		INSERT INTO TB_FOR_FAQ
		(
				FAQ_FILENM,
				USER_NM,
				USE_YN,
				INSRT_ID,
				INSRT_DATE,
				UPDT_ID,
				UPDT_DATE,
				BOARD_TYPE
		)
		VALUE(
			#{faqFileNm},
			#{userName},
			#{useYn},
			#{insrtId},
			NOW(),
			#{updtId},
			NOW(),
			#{boardType}
		)
	</insert>
</mapper>